# Release automation for the qaftray application
name: "publish"
on:
  push:
    tags: -"qaftray-v*"
  workflow_dispatch:

jobs:
  build:
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        platform: [ubuntu-20.04]
    runs-on: ${{ matrix.platform }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Node.js environment
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: "npm"

      - name: Install Rust stable toolchain
        uses: dtolnay/rust-toolchain@stable

      - name: Cache Cargo registry
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Install dependencies (Ubuntu only)
        if: matrix.platform == 'ubuntu-20.04'
        uses: awalsh128/cache-apt-pkgs-action@latest
        with:
          packages: |
            libgtk-3-dev libwebkit2gtk-4.0-dev libappindicator3-dev librsvg2-dev patchelf
          version: 3.0

      - name: Install frontend dependencies
        run: npm ci

      - name: Cache Cargo build
        uses: actions/cache@v2
        with:
          path: |
            target/release
            target/debug
          key: ${{ runner.os }}-build-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ hashFiles('**/Cargo.lock') }}

      - name: Build QAFTray
        run: npm -w ./packages/qaftray run tauri build

      - name: Upload appimage artifact
        if: matrix.platform == 'ubuntu-20.04'
        uses: actions/upload-artifact@v3
        with:
          name: "release_artifacts"
          path: |
            target/release/bundle/appimage/*.AppImage
          if-no-files-found: error

      - name: Upload deb artifact
        if: matrix.platform == 'ubuntu-20.04'
        uses: actions/upload-artifact@v3
        with:
          name: "release_artifacts"
          path: |
            target/release/bundle/deb/*.deb
          if-no-files-found: error

      - name: Upload nsis artifact
        if: matrix.platform == 'windows-latest'
        uses: actions/upload-artifact@v3
        with:
          name: "release_artifacts"
          path: |
            target/release/bundle/nsis/*.exe
          if-no-files-found: error

  publish:
    runs-on: ubuntu-20.04
    needs: build
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v2
        with:
          name: release_artifacts
          path: ${{ github.workspace }}/release_artifacts.zip

      - name: Extract artifacts for release upload
        run: |
          mkdir ${{ github.workspace }}/pkg
          ls ${{ github.workspace }}
          unzip ${{ github.workspace }}/release_artifacts.zip -d ${{ github.workspace }}/pkg/

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: QAFTray v${{ github.ref }}
          body: |
            TODO
          draft: true
          prerelease: true

      - name: Upload Release Assets
        run: |
          for file in ${{ github.workspace }}/pkg/*; do
            echo "Uploading $file"
            curl \
              -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
              -H "Content-Type: $(file -b --mime-type $file)" \
              --data-binary @$file \
              "${{ steps.create_release.outputs.upload_url }}?name=$(basename $file)"
          done
